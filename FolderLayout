Screen Layout:
- App
    - Orders Button
    - Orders List Button
- Menu
    - Map
    - Products
- OrdersList
    - Orders

Folder Layout:
- assets
    - 2pap.jpg
    - Products
        - productImage.jpg
- Components
    - Menu
        - Map
            - Map.js
        - Products
            - Product.js
    - OrdersList
        - order.js

<View style={styles.productsSection}>
          <Text >Men√∫</Text>
          {
          this.state.products &&
          this.state.products.map( product => {
            return(
              <View style={{padding:20, flex:1, flexDirection:"row", alignItems:"center", justifyContent:"center"}}>
                <Text style={{flex:4}}>{product.name} </Text>
                <Text style={{flex:2}}>{product.price}</Text>
                 {/* <TextInput style={{flex:1, borderWidth:2, borderColor:"#fff", padding:10}} keyboardType={'numeric'}/> */}
                 <Button style={{flex:2}} title="Pedir" onPress={this.addOrder()}/>
                 {/* <Modal
                  Text="Ordenar"
                 /> */}
              </View>
            )
          }) 
        }
        </View>



import React from 'react';
import MapView from 'react-native-maps';
import { StyleSheet, Text, View, Dimensions } from 'react-native';

export default class App extends React.Component {
  render() {
    return (
      <View style={styles.container}>
        <MapView style={styles.mapStyle}
        
        />
      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center',
  },
  mapStyle: {
    width: Dimensions.get('window').width,
    height: Dimensions.get('window').height,
  },
});

import React, { useState, useEffect } from 'react';
import { Platform, Text, View, StyleSheet } from 'react-native';
import Constants from 'expo-constants';
import * as Location from 'expo-location';

export default function App() {
  const [location, setLocation] = useState(null);
  const [errorMsg, setErrorMsg] = useState(null);

  useEffect(() => {
    if (Platform.OS === 'android' && !Constants.isDevice) {
      setErrorMsg(
        'Oops, this will not work on Sketch in an Android emulator. Try it on your device!'
      );
    } else {
      (async () => {
        let { status } = await Location.requestPermissionsAsync();
        if (status !== 'granted') {
          setErrorMsg('Permission to access location was denied');
        }

        let location = await Location.getCurrentPositionAsync({});
        setLocation(location);
      })();
    }
  });

  let text = 'Waiting..';
  if (errorMsg) {
    text = errorMsg;
  } else if (location) {
    text = JSON.stringify(location);
  }

  return (
    <View style={styles.container}>
      <Text style={styles.paragraph}>{text}</Text>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    paddingTop: Constants.statusBarHeight,
    backgroundColor: '#ecf0f1',
  },
  paragraph: {
    margin: 24,
    fontSize: 18,
    textAlign: 'center',
  },
});